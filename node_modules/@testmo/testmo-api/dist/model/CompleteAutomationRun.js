"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * The CompleteAutomationRun model module.
 * @module model/CompleteAutomationRun
 * @version 1.0.0
 */
var CompleteAutomationRun = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>CompleteAutomationRun</code>.
   * @alias module:model/CompleteAutomationRun
   */
  function CompleteAutomationRun() {
    _classCallCheck(this, CompleteAutomationRun);

    CompleteAutomationRun.initialize(this);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(CompleteAutomationRun, null, [{
    key: "initialize",
    value: function initialize(obj) {}
    /**
     * Constructs a <code>CompleteAutomationRun</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompleteAutomationRun} obj Optional instance to populate.
     * @return {module:model/CompleteAutomationRun} The populated <code>CompleteAutomationRun</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new CompleteAutomationRun();

        if (data.hasOwnProperty('measure_elapsed')) {
          obj['measure_elapsed'] = _ApiClient["default"].convertToType(data['measure_elapsed'], 'Boolean');
        }
      }

      return obj;
    }
  }]);

  return CompleteAutomationRun;
}();
/**
 * Defines if the execution time of the automation run should automatically be set to the elapsed time between the creation and completion date of the run. This is useful in scenarios where the overall execution time of the run is independent from the execution times of its threads.
 * @member {Boolean} measure_elapsed
 */


CompleteAutomationRun.prototype['measure_elapsed'] = undefined;
var _default = CompleteAutomationRun;
exports["default"] = _default;